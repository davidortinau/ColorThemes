<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:dotnet_colorthemes"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sf="clr-namespace:Syncfusion.Maui.Toolkit.TextInputLayout;assembly=Syncfusion.Maui.Toolkit"
             x:Class="dotnet_colorthemes.MainPage"
             BackgroundColor="{DynamicResource Background}">

  <ContentPage.Resources>
    <local:ColorToHexConverter x:Key="ColorToHexConverter"/>
  </ContentPage.Resources>

  <ScrollView>
    <VerticalStackLayout Padding="20"
        Spacing="24">

      <Label Text="Choose your settings"
          FontSize="32"
          TextColor="{DynamicResource Secondary}"/>
      <Grid 
          ColumnSpacing="12"
          RowSpacing="12"
          ColumnDefinitions="Auto,*,30,*"
          RowDefinitions="Auto,Auto,Auto,Auto">
        <Label Text="Primary"
            Grid.Column="0"/>
        <Entry 
            Grid.Column="1"
            Text="{x:Static local:App.Primary}"
            x:Name="PrimaryColorEntry">
          <Entry.Behaviors>
            <toolkit:TextValidationBehavior
              InvalidStyle="{StaticResource InvalidEntryStyle}"
              Flags="ValidateOnUnfocused"
              RegexPattern="^#(?:[0-9a-fA-F]{3}){1,2}$"/>
          </Entry.Behaviors>
        </Entry>
        <BoxView HeightRequest="30"
            WidthRequest="30"
            VerticalOptions="Center"
                 Color="{Binding Text, Source={x:Reference PrimaryColorEntry}, x:DataType=Entry}"
            Grid.Column="2"/>

        <Label Text="Secondary"
            Grid.Column="0"
            Grid.Row="1"/>
        <Entry Text="{x:Static local:App.Secondary}"
            Grid.Column="1"
            Grid.Row="1"
            x:Name="SecondaryColorEntry">
          <Entry.Behaviors>
            <toolkit:TextValidationBehavior
              InvalidStyle="{StaticResource InvalidEntryStyle}"
              Flags="ValidateOnUnfocused"
              RegexPattern="^#(?:[0-9a-fA-F]{3}){1,2}$"/>
          </Entry.Behaviors>
        </Entry>
        <BoxView HeightRequest="30"
            WidthRequest="30"
            VerticalOptions="Center"
            Color="{Binding Text, Source={x:Reference SecondaryColorEntry}, x:DataType=Entry}"
            Grid.Column="2"
            Grid.Row="1"/>

        <Label Text="Light Background"
            Grid.Column="0"
            Grid.Row="2"/>
        <Entry Text="{x:Static local:App.LightBackground}"
            Grid.Column="1"
            Grid.Row="2"
            x:Name="LightBackgroundColorEntry">
          <Entry.Behaviors>
            <toolkit:TextValidationBehavior
              InvalidStyle="{StaticResource InvalidEntryStyle}"
              Flags="ValidateOnUnfocused"
              RegexPattern="^#(?:[0-9a-fA-F]{3}){1,2}$"/>
          </Entry.Behaviors>
        </Entry>
        <BoxView HeightRequest="30"
            WidthRequest="30"
            VerticalOptions="Center"
            Color="{Binding Text, Source={x:Reference LightBackgroundColorEntry}, x:DataType=Entry}"
            Grid.Column="2"
            Grid.Row="2"/>

          <Label Text="Dark Background"
            Grid.Column="0"
            Grid.Row="3"/>
        <Entry Text="{x:Static local:App.DarkBackground}"
            Grid.Column="1"
            Grid.Row="3"
            x:Name="DarkBackgroundColorEntry">
          <Entry.Behaviors>
            <toolkit:TextValidationBehavior
              InvalidStyle="{StaticResource InvalidEntryStyle}"
              Flags="ValidateOnUnfocused"
              RegexPattern="^#(?:[0-9a-fA-F]{3}){1,2}$"/>
          </Entry.Behaviors>
        </Entry>
        <BoxView HeightRequest="30"
            WidthRequest="30"
            VerticalOptions="Center"
            Color="{Binding Text, Source={x:Reference DarkBackgroundColorEntry}, x:DataType=Entry}"
            Grid.Column="2"
            Grid.Row="3"/>
      </Grid>

      <Button Text="Apply Colors"
        x:Name="ApplyColorsButton"
          Clicked="ApplyColorsButton_Clicked"/>
      <Button Text="Toggle Theme"
          Clicked="Button_Clicked"
          Margin="0,24,0,0"/>

      <!-- Code Generation Format Selection -->
      <!-- Surfaces -->
      <Label Text="Surfaces"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <Border Background="{DynamicResource Surface0}"
          Padding="12">
        <Label Text="Surface0"
            TextColor="{DynamicResource OnSurface}"/>
      </Border>
      <Border Background="{DynamicResource Surface1}"
          Padding="12">
        <Label Text="Surface1"
            TextColor="{DynamicResource OnSurface}"/>
      </Border>
      <Border Background="{DynamicResource Surface2}"
          Padding="12">
        <Label Text="Surface2"
            TextColor="{DynamicResource OnSurface}"/>
      </Border>
      <Border Background="{DynamicResource Surface3}"
          Padding="12">
        <Label Text="Surface3"
            TextColor="{DynamicResource OnSurface}"/>
      </Border>

      <!-- Buttons -->
      <Label Text="Buttons"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <HorizontalStackLayout Spacing="16">
        <Button Text="Primary"
            BackgroundColor="{DynamicResource Primary}"
            TextColor="{DynamicResource OnPrimary}"/>
        <Button Text="Disabled"
            IsEnabled="False"
            BackgroundColor="{DynamicResource PrimaryDisabled}"
            TextColor="{DynamicResource OnPrimary}"/>
      </HorizontalStackLayout>
      <HorizontalStackLayout Spacing="16">
        <Button Text="Hover Preview"
            BackgroundColor="{DynamicResource PrimaryHover}"
            TextColor="{DynamicResource OnPrimary}"/>
        <Button Text="Pressed Preview"
            BackgroundColor="{DynamicResource PrimaryPressed}"
            TextColor="{DynamicResource OnPrimary}"/>
      </HorizontalStackLayout>

      <!-- Text and Entry -->
      <Label Text="Text &amp; Entry"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <Entry Placeholder="Placeholder"
          TextColor="{DynamicResource OnBackground}"
          PlaceholderColor="{DynamicResource Surface1}"/>
      <Editor Text="Multiline text"
          TextColor="{DynamicResource OnBackground}"/>

      <!-- Progress &amp; Slider -->
      <Label Text="ProgressBar &amp; Slider"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <ProgressBar Progress="0.6"
          ProgressColor="{DynamicResource Primary}"/>
      <Slider Minimum="0"
          Maximum="100"
          Value="50"
          MinimumTrackColor="{DynamicResource Primary}"
          MaximumTrackColor="{DynamicResource Surface1}"
          ThumbColor="{DynamicResource Primary}"/>

      <!-- Switch &amp; CheckBox -->
      <Label Text="Switch &amp; CheckBox"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <Switch IsToggled="True"
          OnColor="{DynamicResource Primary}"
          ThumbColor="{DynamicResource OnPrimary}"/>
      <CheckBox IsChecked="True"
          Color="{DynamicResource Primary}"/>

      <!-- Feedback Colors -->
      <Label Text="Feedback Colors"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <StackLayout Orientation="Horizontal"
          Spacing="16">
        <Border BackgroundColor="{DynamicResource Error}"
            Padding="8">
          <Label Text="Error"
              TextColor="White"/>
        </Border>
        <Border BackgroundColor="{DynamicResource Success}"
            Padding="8">
          <Label Text="Success"
              TextColor="White"/>
        </Border>
        <Border BackgroundColor="{DynamicResource Info}"
            Padding="8">
          <Label Text="Info"
              TextColor="White"/>
        </Border>
      </StackLayout>

      <!-- Borders &amp; Focus Outline Preview -->
      <Label Text="Borders &amp; Focus"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"/>
      <Border Stroke="{DynamicResource Border}"
          StrokeShape="RoundRectangle 4"
          Padding="8">
        <Label Text="Border token"
            TextColor="{DynamicResource OnBackground}"/>
      </Border>
      <!-- Color Swatches -->
      <Label Text="Color Swatches"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"
          Margin="0,24,0,0"/>
      <Grid x:Name="ColorSwatchesGrid"
            ColumnDefinitions="*,*,*"
            ColumnSpacing="12"
            RowDefinitions="Auto,Auto,Auto,Auto"
            RowSpacing="12">
        <!-- Color swatches will be created dynamically in code -->
        <Border Grid.Row="0"
            Grid.Column="0"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Primary"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="PrimaryColorBox"
                     Grid.Row="1"
                     Color="{DynamicResource Primary}"
                     HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="PrimaryHexLabel"
                Grid.Row="2"
                   FontSize="10"
                HorizontalOptions="Center"
                   TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>
        <Border Grid.Row="0"
            Grid.Column="1"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Secondary"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="SecondaryColorBox"
                Grid.Row="1"
                Color="{DynamicResource Secondary}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="SecondaryHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="0"
            Grid.Column="2"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Tertiary"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="TertiaryColorBox"
                Grid.Row="1"
                Color="{DynamicResource Tertiary}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="TertiaryHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <!-- Surface Colors -->
        <Border Grid.Row="1"
            Grid.Column="0"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Surface0"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="Surface0ColorBox"
                Grid.Row="1"
                Color="{DynamicResource Surface0}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="Surface0HexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="1"
            Grid.Column="1"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Surface1"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="Surface1ColorBox"
                Grid.Row="1"
                Color="{DynamicResource Surface1}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="Surface1HexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="1"
            Grid.Column="2"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Surface2"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="Surface2ColorBox"
                Grid.Row="1"
                Color="{DynamicResource Surface2}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="Surface2HexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <!-- Feedback Colors -->
        <Border Grid.Row="2"
            Grid.Column="0"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Error"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="ErrorColorBox"
                Grid.Row="1"
                Color="{DynamicResource Error}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="ErrorHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="2"
            Grid.Column="1"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Success"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="SuccessColorBox"
                Grid.Row="1"
                Color="{DynamicResource Success}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="SuccessHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="2"
            Grid.Column="2"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Info"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="InfoColorBox"
                Grid.Row="1"
                Color="{DynamicResource Info}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="InfoHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <!-- Additional Colors -->
        <Border Grid.Row="3"
            Grid.Column="0"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="Background"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="BackgroundColorBox"
                Grid.Row="1"
                Color="{DynamicResource Background}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="BackgroundHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="3"
            Grid.Column="1"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="OnBackground"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="OnBackgroundColorBox"
                Grid.Row="1"
                Color="{DynamicResource OnBackground}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="OnBackgroundHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>

        <Border Grid.Row="3"
            Grid.Column="2"
            StrokeShape="RoundRectangle 4"
            Padding="8"
            Stroke="{DynamicResource Border}">
          <Grid RowDefinitions="Auto,*,Auto">
            <Label Text="OnSurface"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
            <BoxView x:Name="OnSurfaceColorBox"
                Grid.Row="1"
                Color="{DynamicResource OnSurface}"
                HeightRequest="50"
                Margin="0,4"/>
            <Label x:Name="OnSurfaceHexLabel"
                Grid.Row="2"
                FontSize="10"
                HorizontalOptions="Center"
                TextColor="{DynamicResource OnBackground}"/>
          </Grid>
        </Border>
      </Grid>      
      
      <!-- Generated Code Output -->
      <Label Text="Generated Theme Code"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"
          Margin="0,24,0,0"/>
      <Label Text="Code Generation Format"
          FontSize="20"
          TextColor="{DynamicResource Secondary}"
          Margin="0,24,0,0"/>

    <sf:SfTextInputLayout Hint="Code Format" 
      BackgroundColor="Transparent" Background="Transparent"
      ContainerBackground="Transparent" ContainerType="Outlined">
      <Picker x:Name="CodeFormatPicker">
          <Picker.ItemsSource>
            <x:Array Type="{x:Type x:String}">
              <x:String>AppThemeColor (CommunityToolkit)</x:String>
              <x:String>AppThemeBinding</x:String>
              <x:String>DynamicResource</x:String>
              <x:String>MauiReactor</x:String>
              <x:String>CSharpMarkup (CommunityToolkit)</x:String>
            </x:Array>
          </Picker.ItemsSource>
        </Picker>
    </sf:SfTextInputLayout>
      
      <HorizontalStackLayout Spacing="16">
        <CheckBox x:Name="IncludeStylesCheckBox"
            IsChecked="False"/>
        <Label Text="Include Styles (Styles and Layouts)"
            VerticalOptions="Center"/>
      </HorizontalStackLayout>

      <Button x:Name="GenerateXamlButton"
              Text="Generate Code"
              Clicked="GenerateXamlButton_Clicked"
              BackgroundColor="{DynamicResource Primary}"
              TextColor="{DynamicResource OnPrimary}"/>
      <Editor x:Name="ThemeXamlEditor"
              HeightRequest="200"
              IsReadOnly="True"
              BackgroundColor="{DynamicResource Surface0}"
              TextColor="{DynamicResource OnBackground}"/>
      <Button x:Name="SaveXamlButton"
              Text="Save to File"
              Clicked="SaveXamlButton_Clicked"
              BackgroundColor="{DynamicResource Secondary}"
              TextColor="{DynamicResource OnSecondary}"
              IsEnabled="False"/>

      

    </VerticalStackLayout>
  </ScrollView>

</ContentPage>
